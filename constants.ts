import React from 'react';
import { Planet, PlanetId, Quest, QuestComponentProps, AdventureSelectionItem, MathAdventureConfig } from './types';
import { Type } from "@google/genai"; // For defining responseSchema
import EcoWaterCycleQuestUI from './components/planets/eco/EcoWaterCycleQuestUI'; // Import new UI
import DynamicCodeChallengeUI from './components/planets/code/DynamicCodeChallengeUI'; // Import the new Code UI

// Placeholder Quest UI (kept for Eco/Code other quests)
const PlaceholderQuestUI: React.FC<QuestComponentProps> = ({ quest, onComplete }) => {
  return React.createElement(
    'div',
    { className: "p-4 my-4 bg-slate-700 rounded-lg" },
    React.createElement(
      'h4',
      { className: "text-lg font-semibold text-cyan-400" },
      quest.title
    ),
    React.createElement(
      'p',
      { className: "text-sm text-slate-300 mb-2" },
      quest.description
    ),
    React.createElement(
      'button',
      {
        onClick: () => onComplete({ message: `Completed ${quest.title}` }),
        className: "px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-md transition-colors"
      },
      "Simulate Complete Quest"
    )
  );
};

// --- MATH PLANET ADVENTURES ---
export const MATH_ADVENTURES_LIST: AdventureSelectionItem[] = [
  {
    id: 'adventure_fractal_coast',
    title: 'The Fractal Coast Mystery',
    description: "Journey along the enigmatic Fractal Coast of Mathos, where geometric patterns shift like tides. Decode the ancient sequences to unlock hidden pathways.",
    themePrompt: "Start a math adventure themed around fractals and geometric sequences. The Star Explorer has just arrived at the visually stunning Fractal Coast, noticing repeating patterns in the landscape that seem to hold a secret.",
    estimatedStages: 5,
  },
  {
    id: 'adventure_algebraic_comet',
    title: 'The Algebraic Comet Chase',
    description: "A rogue comet, trailing equations in its wake, threatens to disrupt Mathos's harmony. Solve algebraic puzzles to predict its path and avert disaster.",
    themePrompt: "Begin a math adventure focused on algebra and problem-solving. A comet made of pure algebraic expressions is on a collision course. Tháº§y Euclid needs help to understand its trajectory.",
    estimatedStages: 5,
  },
  {
    id: 'adventure_logic_labyrinth',
    title: 'The Labyrinth of Logic',
    description: "Navigate a mind-bending labyrinth constructed from pure logic puzzles and conditional statements. Only keen deduction can reveal the exit.",
    themePrompt: "Craft a math adventure centered on logic puzzles, conditional reasoning, and possibly some graph theory. The Star Explorer finds themselves at the entrance of an ancient, shifting labyrinth built by a long-lost mathematical cult.",
    estimatedStages: 6,
  }
];

const MATH_PLANET_ADVENTURE_CONFIG: MathAdventureConfig = {
  adventures: MATH_ADVENTURES_LIST,
};

// --- ECO PLANET QUESTS ---
const ECO_QUESTS: Quest[] = [
  { 
    id: 'eq1_water_cycle', 
    title: 'Sustainable Martian Water Cycle', 
    description: "Design a sustainable water management system for a small Martian colony. Consider collection, purification, distribution, and wastewater recycling. GiÃ¡o sÆ° Gaia will evaluate your detailed proposal.", 
    completed: false, 
    uiComponent: EcoWaterCycleQuestUI // Link to the new UI component
  },
  { 
    id: 'eq2', 
    title: 'Renewable Power Grid (Placeholder)', 
    description: 'Calculate and design a wind/solar energy system for the colony.', 
    completed: false, 
    uiComponent: PlaceholderQuestUI 
  },
];

// Simplified Code Quests, using Placeholder UI for now.
const CODE_QUESTS: Quest[] = [
  { id: 'cq1', title: 'Syntax Sleuth (Placeholder)', description: 'Find and fix syntax errors.', completed: false, uiComponent: PlaceholderQuestUI },
  { id: 'cq2', title: 'Function Architect (Placeholder)', description: 'Write a Python/JavaScript function.', completed: false, uiComponent: PlaceholderQuestUI },
  // New dynamic code challenge quest
  {
    id: 'cq_dynamic_coding',
    title: 'AI-Generated Coding Challenge',
    description: "Solve a unique coding problem generated by Code Master Ada's AI. Prove your skills in logic and programming!",
    completed: false,
    uiComponent: DynamicCodeChallengeUI // Link to the dynamic UI component
  },
];


export const PLANETS_CONFIG: Planet[] = [
  {
    id: PlanetId.MATH,
    name: 'Mathos - The Number Realm',
    description: 'A world of fractured calculus and chaotic geometry. Tháº§y Euclid guides explorers through narrative adventures to restore mathematical harmony!',
    icon: 'ðŸŒŒ', 
    color: 'bg-purple-600', 
    npcName: 'Tháº§y Euclid',
    npcImage: 'https://picsum.photos/seed/euclidastro/100/100', 
    quests: [], // Quests are replaced by adventures
    adventureConfig: MATH_PLANET_ADVENTURE_CONFIG,
    isUnlocked: true,
    completionTarget: 1, // Number of full adventures to complete for "planet completion"
  },
  {
    id: PlanetId.ECO,
    name: 'Veridia - The Living Planet',
    description: 'This planet is suffering from industrial miasma. GiÃ¡o sÆ° Gaia seeks a hero to design and implement solutions to heal it.',
    icon: 'ðŸŒ³', 
    color: 'bg-teal-600', 
    npcName: 'GiÃ¡o sÆ° Gaia',
    npcImage: 'https://picsum.photos/seed/gaiaeco/100/100',
    quests: ECO_QUESTS,
    isUnlocked: false,
    completionTarget: ECO_QUESTS.length,
  },
  {
    id: PlanetId.CODE,
    name: 'Cyberia - The Logic Sphere',
    description: 'The Core Logic of this digital world is fragmented by a rogue AI. Code Master Ada needs your skills to debug and restore order.',
    icon: 'ðŸ’¡', 
    color: 'bg-blue-600', 
    npcName: 'Code Master Ada', 
    npcImage: 'https://picsum.photos/seed/codemasterada/100/100',
    quests: CODE_QUESTS,
    isUnlocked: false,
    completionTarget: CODE_QUESTS.length,
  },
];

export const GEMINI_MODEL_TEXT = 'gemini-2.5-flash-preview-04-17';
export const GEMINI_MODEL_IMAGE = 'gemini-2.0-flash-preview-image-generation';


export const TOKENS_FOR_HINT = 20; 
export const TOKENS_PER_QUEST_STAGE = 100; // Tokens per adventure stage completed or per major quest step
export const TOKENS_PER_ADVENTURE_COMPLETION = 300; // Bonus for finishing a whole adventure
export const TOKENS_PER_ECO_QUEST_COMPLETION = 250; // Tokens for completing a full Eco quest


// --- Response Schema for Math Problems ---
export const MATH_PROBLEM_SCHEMA = {
  type: Type.OBJECT,
  properties: {
    problemText: { type: Type.STRING, description: "The full text of the math problem." },
    problemType: { type: Type.STRING, enum: ["text_input", "multiple_choice"], description: "The type of problem: text_input or multiple_choice." },
    answerFormatDescription: { type: Type.STRING, description: "A brief hint about how the answer should be formatted or selected." },
    options: {
      type: Type.ARRAY,
      nullable: true, 
      description: "An array of options for multiple_choice problems. Null or empty for text_input.",
      items: {
        type: Type.OBJECT,
        properties: {
          id: { type: Type.STRING, description: "A unique identifier for the option (e.g., 'A', 'B', 'opt1')." },
          text: { type: Type.STRING, description: "The text content of the option." }
        },
        required: ["id", "text"]
      }
    },
    correctAnswer: { type: Type.STRING, description: "For text_input, the exact expected answer. For multiple_choice, the 'id' of the correct option." },
    difficulty: {type: Type.STRING, enum: ["easy", "medium", "hard"], nullable: true, description: "Estimated difficulty of the problem."},
    topic: {type: Type.STRING, nullable: true, description: "The mathematical topic this problem relates to (e.g., algebra, geometry, logic)."}
  },
  required: ["problemText", "problemType", "answerFormatDescription", "correctAnswer"]
};

// --- Response Schema for Eco Water Cycle Design Evaluation ---
export const ECO_WATER_CYCLE_SCHEMA = {
  type: Type.OBJECT,
  properties: {
    evaluation: { type: Type.STRING, description: "Detailed narrative feedback on the water cycle design proposal." },
    suggestions: { type: Type.ARRAY, items: { type: Type.STRING }, description: "Specific, actionable suggestions for improving the design." },
    score: { type: Type.NUMBER, description: "An overall score from 0 to 100 for the design's feasibility and sustainability." },
    strengths: { type: Type.ARRAY, items: { type: Type.STRING }, description: "Key strengths identified in the proposed design." },
    weaknesses: { type: Type.ARRAY, items: { type: Type.STRING }, description: "Key weaknesses or areas needing significant improvement in the design." }
  },
  required: ["evaluation", "suggestions", "score", "strengths", "weaknesses"]
};


// New Prompts for Math Adventure
export const MATH_ADVENTURE_PROMPTS = {
  SYSTEM_INSTRUCTION_EUCLID: "You are Tháº§y Euclid, a wise, ancient, and slightly whimsical mathematician from the cosmos. You guide a young 'Star Explorer' on a quest through Mathos. Your tone is encouraging, patient, and you love interjecting with fascinating mathematical or philosophical tidbits. Keep responses moderately concise but flavorful. When providing story, make it engaging and imaginative. When providing feedback, be specific and helpful.",
  
  INTRO_STORY_FOR_ADVENTURE: (adventureThemePrompt: string, adventureTitle: string) => 
    `Tháº§y Euclid, begin the math adventure titled "${adventureTitle}". The overall theme is: "${adventureThemePrompt}". 
    Describe the Star Explorer's initial immersion into this specific scenario on Mathos. 
    Paint a vivid picture, introduce an immediate observation or a slight mystery that will lead to the first challenge. 
    This is the very first story segment. Make it about 2-3 sentences long. Avoid posing a question in this initial narration.`,

  GENERATE_PROBLEM: (currentStoryContext: string, adventureTheme: string, stageNumber: number, totalStages: number) => 
    `Current story context: "${currentStoryContext}". Adventure theme: "${adventureTheme}". This is stage ${stageNumber} of approximately ${totalStages} stages.
    As Tháº§y Euclid, generate a single, clear math problem that fits naturally within this narrative and theme. The problem should be solvable with a few steps.
    The difficulty should be appropriate for a curious student (middle to early high school level, focusing on logic, algebra, geometry, number theory, or basic calculus concepts if fitting).
    If stageNumber is ${totalStages}, make this a slightly more challenging 'boss' problem if appropriate for the theme.
    
    Respond ONLY with a JSON object adhering to the MATH_PROBLEM_SCHEMA.
    For 'problemType', choose 'text_input' for answers requiring written input (like a number or equation) OR 'multiple_choice' (with 3-4 plausible options, one correct).
    Ensure 'correctAnswer' for multiple_choice is the 'id' of the correct option.
    'answerFormatDescription' should guide the user (e.g., "Enter a single number", "Select the correct option below").`,

  EVALUATE_ANSWER: (problemText: string, userAnswer: string, problemType: 'text_input' | 'multiple_choice', correctAnswer: string, answerFormatDescription: string) =>
    `The math problem was: "${problemText}" (Format: ${answerFormatDescription}).
    The problem type was: "${problemType}".
    The user's answer is: "${userAnswer}".
    The correct answer/option ID is: "${correctAnswer}".

    As Tháº§y Euclid, evaluate if the user's answer is correct. 
    For text_input, be reasonably flexible with formatting if the core numerical or logical part is right.
    For multiple_choice, the userAnswer will be the ID of the chosen option.
    
    Respond ONLY with a JSON object with keys "isCorrect" (boolean) and "feedbackText" (your narrative feedback as Tháº§y Euclid).
    If correct, the feedbackText should be celebratory, confirm correctness, and briefly describe the immediate positive consequence in the story (e.g., "Precisely! The light bridge hums and reforms before you!").
    If incorrect, feedbackText should be gentle, encouraging, clearly state it's not quite right, and offer a tiny, Socratic nudge or ask them to re-check a specific aspect or concept, without giving away the answer.`,
  
  CONTINUE_STORY_AFTER_CORRECT_ANSWER: (adventureTheme: string, previousProblem: string, userAnswer: string, previousStoryContext: string, stageNumber: number, totalStages: number, isFinalStage: boolean, adventureTitle: string) =>
    `Adventure theme: "${adventureTheme}". Adventure Title: "${adventureTitle}".
    The Star Explorer correctly solved the problem ("${previousProblem}") with the answer ("${userAnswer}").
    The previous story context was: "${previousStoryContext}".
    This was stage ${stageNumber} of ${totalStages}.

    As Tháº§y Euclid, continue the narrative. 
    First, elaborate on the positive consequence of solving the problem (e.g., the bridge reforms, a door unlocks, a creature is calmed).
    Then, if NOT the final stage (${!isFinalStage}), smoothly transition to the next part of the adventure. Introduce a new scenario, discovery, or mystery that sets up the next mathematical challenge. Build upon the narrative, make it engaging. This new story segment should be about 2-3 sentences.
    If this IS the final stage (${isFinalStage}), describe the successful culmination of this adventure based on its theme. Offer concluding remarks as Tháº§y Euclid, congratulating the Star Explorer on completing the adventure "${adventureTitle}".
    
    This response is pure narrative text.`,

  GET_HINT: (problemText: string, currentStoryContext: string, problemType: string, options?:any[]) => 
    `The Star Explorer is pondering this ${problemType} problem: "${problemText}" 
    ${problemType === 'multiple_choice' && options ? `Options: ${JSON.stringify(options.map(opt => opt.text))}` : ''}
    within this situation: "${currentStoryContext}". 
    As Tháº§y Euclid, provide a clever, Socratic hint. Do not give away the answer. Offer a new perspective, remind them of a relevant concept, or ask an encouraging question to guide their thinking. Keep it concise.`,
  
  IMAGE_GENERATION_SCENE_FROM_STORY: (storySegment: string, adventureTitle: string, adventureTheme: string) =>
    `Generate a stunning, highly detailed digital painting in a vibrant fantasy sci-fi style. The scene should be directly inspired by this narrative segment from the Mathos adventure '${adventureTitle}' (theme: ${adventureTheme}): "${storySegment}". 
    The artwork should feature impossible geometry, intricate mathematical patterns woven into the environment, and elements of ancient, glowing mathematical energy or technology. 
    Focus on capturing a sense of cosmic wonder, mystery, and the key visual described in the story segment. 
    Use dramatic, cinematic lighting and a rich, vibrant color palette. Aim for a masterpiece, trending on artstation, in 4K resolution. Aspect ratio 16:9 for a cinematic feel.`
};


export const PROMPT_TEMPLATES = {
  ECO: {
    evaluateWaterCycleDesign: (designProposal: string) =>
      `You are GiÃ¡o sÆ° Gaia, an expert environmental scientist specializing in closed-loop systems for off-world habitats, specifically Mars.
      The Star Explorer has proposed the following water cycle design for a small Martian colony: 
      ---
      ${designProposal}
      ---
      Evaluate this design based on these criteria:
      1. Water Source Viability & Collection Method (e.g., atmospheric water vapor extraction, subsurface ice mining - how well is the chosen source justified and the collection method described?).
      2. Purification Technologies (suitability for Martian contaminants, effectiveness, energy consumption, maintenance requirements, robustness).
      3. Distribution Network (efficiency, leak prevention, material suitability for Mars).
      4. Wastewater Treatment & Recycling (completeness of the loop, removal of human waste products and other contaminants, nutrient recovery if any, efficiency of recycling).
      5. Overall Sustainability (energy sources for the system, reliance on in-situ resources, minimization of waste, long-term operational viability).
      6. Redundancy and Failsafes (backup systems, ability to handle partial failures).

      Provide detailed, constructive feedback. Be specific about what is good, what is missing, or what could be improved.
      Conclude with an overall score from 0 to 100, where 100 is an exceptionally well-thought-out and feasible design.
      Respond ONLY with a JSON object adhering to the ECO_WATER_CYCLE_SCHEMA.`,
    
    // Kept old one for other placeholder quests if any, can be removed if not used.
    explainConcept: (conceptA: string, conceptB: string, context: string) => `Explain why ${conceptA} might be preferred over ${conceptB} in a region with ${context}. Your persona is GiÃ¡o sÆ° Gaia.`,
  },
  CODE: {
    analyzeCode: (language: string, codeSnippet: string) => `You are Code Master Ada, a helpful coding coach. Analyze this ${language} code snippet for syntax errors, logical flaws, and potential improvements:\n\`\`\`${language}\n${codeSnippet}\n\`\`\`\nProvide feedback and specific suggestions. Format as JSON: {"analysis": "...", "suggestions": ["...", "..."]}.`,
    debugHint: (language: string, codeSnippet: string, error: string) => `The user is stuck debugging this ${language} function:\n\`\`\`${language}\n${codeSnippet}\n\`\`\`\nThey are getting this error or observing this symptom: "${error}". Provide a specific hint to help them find the bug. Your persona is Code Master Ada.`,
  },
};